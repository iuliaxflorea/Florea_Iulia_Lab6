<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Florea_Iulia_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Florea_Iulia_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded"/>
<Window.Resources>
    <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
    <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
    <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
            <AdornedElementPlaceholder/>
        </DockPanel>
    </ControlTemplate>
    <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</Window.Resources>
<Grid>
    <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="320" Margin="54,46,0,0" VerticalAlignment="Top" Width="696">
        <TabItem Header="Customers" RenderTransformOrigin="0.5,0.5">
            <TabItem.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="0.052"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TabItem.RenderTransform>
            <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="126*"/>
                    <ColumnDefinition Width="27*"/>
                    <ColumnDefinition Width="9*"/>
                    <ColumnDefinition Width="529*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="82.4,35,45.4,138" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="82.4,186,0,0" VerticalAlignment="Top" Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" IsEnabled="False"/>
                    <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                    <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                    <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                    <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                </Grid>
                <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="31,82,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click"/>
                <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="31,38,0,0" VerticalAlignment="Top" Width="75" Click="btnNew_Click"/>
                <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="31,122,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete_Click"/>
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="31,196,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click"/>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <!-- Butonul Save va fi inactiv daca exista erori devalidare -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding
ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Grid> 
            <Button x:Name="btnCancel"  HorizontalAlignment="Left" Margin="31,233,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
                <Button x:Name="btnNext"  HorizontalAlignment="Left" Margin="407.4,159,0,0" VerticalAlignment="Top" Width="75" Grid.Column="3"/>
                <Button x:Name="btnPrev"  HorizontalAlignment="Left" Margin="82.4,159,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-2.824,-2.036" Grid.Column="3"/>
        </TabItem>
        <TabItem Header="Inventory">
            <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="39*"/>
                    <ColumnDefinition Width="652*"/>
                </Grid.ColumnDefinitions>
                <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="191.5,30,60.4,148" RowDetailsVisibilityMode="VisibleWhenSelected" SelectionChanged="inventoryDataGrid_SelectionChanged" Grid.Column="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="carIdColumn1" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="191.5,186,0,0" VerticalAlignment="Top" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" IsEnabled="False"/>
                    <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3.4,6,0,3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                    <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                    <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                </Grid>
                <Button x:Name="btnNewI" Content="New" HorizontalAlignment="Left" Margin="9.8,48,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1"/>
                <Button x:Name="btnEditI" Content="Edit" HorizontalAlignment="Left" Margin="9.8,87,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Click="btnEditI_Click"/>
                <Button x:Name="btnDeleteI" Content="Delete" HorizontalAlignment="Left" Margin="10.5,125,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Click="btnDeleteI_Click"/>
                <Button x:Name="btnCancelI" Content="Cancel" HorizontalAlignment="Left" Margin="10.5,243,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Click="btnCancelI_Click"/>
                <Button x:Name="btnSaveI" Content="Save" HorizontalAlignment="Left" Margin="10.5,205,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Click="btnSaveI_Click"/>
                <Button x:Name="btnNextI" Content="Next" HorizontalAlignment="Left" Margin="516.5,157,0,0" VerticalAlignment="Top" Width="75" Click="Button_Click_1" Grid.Column="1"/>
                <Button x:Name="btnPrevI" Content="Previous" HorizontalAlignment="Left" Margin="191.5,152,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Click="btnPrevI_Click"/>
            </Grid>
        </TabItem>
        <TabItem Header="Orders" RenderTransformOrigin="0.6,1.395">
            <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="457,75,0,0" VerticalAlignment="Top" Width="120"/>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} - {1}">
                                    <Binding Path="Make"/>
                                    <Binding Path="Color"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </Grid>
            <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="177,75,0,0" VerticalAlignment="Top" Width="120" RenderTransformOrigin="0.435,-0.263"/>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="FirstName"/>
                                    <Binding Path="LastName"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                </TabItem>
                <Label x:Name="lblCustomers" Content="Customers&#xD;&#xA;" HorizontalAlignment="Left" Margin="177,38,0,0" VerticalAlignment="Top" Height="37"/>
                <Label x:Name="lblInventory" Content="Inventory&#xD;&#xA;" HorizontalAlignment="Left" Margin="457,33,0,0" VerticalAlignment="Top" Width="76"/>
                <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False"
EnableRowVirtualization="True" ItemsSource="{Binding}"
RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}"
Header="First Name" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}"
Header="Last Name" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}"
Header="Make" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}"
Header="Color" Width="SizeToHeader"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Button x:Name="btnNewO" Content="New" HorizontalAlignment="Left" Margin="34,41,0,0" VerticalAlignment="Top" Width="75"/>
                <Button x:Name="btnEditO" Content="Edit" HorizontalAlignment="Left" Margin="34,75,0,0" VerticalAlignment="Top" Width="75"/>
                <Button x:Name="btnDeleteO" Content="Delete" HorizontalAlignment="Left" Margin="34,105,0,0" VerticalAlignment="Top" Width="75"/>
                <Button x:Name="btnSaveO" Content="Save" HorizontalAlignment="Left" Margin="34,171,0,0" VerticalAlignment="Top" Width="75" Click="btnSaveO_Click"/>
                <Button x:Name="btnCancelO" Content="Cancel" HorizontalAlignment="Left" Margin="34,216,0,0" VerticalAlignment="Top" Width="75"/>
                <Button x:Name="btnPrevO" Content="Previous" HorizontalAlignment="Left" Margin="177,240,0,0" VerticalAlignment="Top" Width="75"/>
                <Button x:Name="btnNextO" Content="Next" HorizontalAlignment="Left" Margin="502,245,0,0" VerticalAlignment="Top" Width="75"/>

                <TabItem>
                </TabItem>
    </TabControl>

    </Grid>
